#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define ALPHABAT 0
#define NUMBER 1
#define FUNTION 2
#define PUNCTUATION 3
#define CONTROL 4
#define GAME 5
#define GAME_NUMBER 6
#define NULL 7

/{
	keymap {
	       compatible = "zmk,keymap";

	       alphabat_layer {
	       		     bindings = <	
			     	      	  &lt PUNCTUATION ESCAPE &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I                &kp O	&kp P	       &lt PUNCTUATION BACKSPACE
			     		  &mt LCTRL TAB   	 &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K     		&kp L   &kp SEMI       &mt RCTRL ENTER
			     		  &mt LSHFT SLASH 	 &mt LSHFT Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA      &kp DOT &mt RSHFT PIPE &mt RSHFT BACKSLASH
			     		  &mt LGUI TILDE 	 &mt LALT SINGLE_QUOTE &lt NUMBER SPACE &mo CONTROL &lt FUNTION SPACE &mt RALT DOUBLE_QUOTES &mt RGUI GRAVE
	       	      	     	    	>;
				};

		number_layer {
	       		     bindings = <	
			     	      	  &kp TILDE	 &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0		      &kp GRAVE
			     		  &kp MINUS	 &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0    	      &kp PLUS
			     		  &kp UNDERSCORE &none  &none  &none  &none  &none  &none  &none  &none  &none 	&none		      &kp EQUAL
			     		  &kp LEFT_BRACE &kp LEFT_BRACKET &kp LEFT_PARENTHESIS &mo CONTROL &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE
	       	      	     	    	>;
				};

		funtion_layer {
	       		     bindings = <	
			     	      	  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
			     		  &kp MINUS	 &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END &none &none &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp PLUS
			     		  &kp UNDERSCORE &none  &none  &none  &none  &none  &none  &none  &none  &none 	&none		     &kp EQUAL
			     		  &kp LEFT_BRACE &kp LEFT_BRACKET &kp LEFT_PARENTHESIS &mo CONTROL &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE
	       	      	     	    	>;
				};

		punctuation_layer {
	       		     bindings = <	
			     	      	  &kp TILDE &kp EXCLAMATION &kp AT_SIGN &kp HASH &kp DOLLAR &kp PERCENT &kp CARET &kp AMPERSAND &kp ASTERISK &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp GRAVE
			     		  &kp MINUS &kp EXCLAMATION &kp AT_SIGN &kp HASH &kp DOLLAR &kp PERCENT &kp CARET &kp AMPERSAND &kp ASTERISK &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp PLUS
			     		  &kp UNDERSCORE &none  &none  &none  &none  &none  &none  &none  &none  &none 	&none		     &kp EQUAL
			     		  &kp LEFT_BRACE &kp LEFT_BRACKET &kp LEFT_PARENTHESIS &mo CONTROL &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE
	       	      	     	    	>;
				};

		contorl_layer {
	       		     bindings = <
			     	      	  &reset &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &none &none &none &none &none &bootloader
  			     	      	  &none  &bt BT_CLR   &none        &out OUT_USB &out OUT_BLE &out OUT_TOG &none &none &none &none &none &none
			     		  &none  &none &none &none &none &none &none &none &none &none &none &none
			     		  &none       &none &none       &mo CONTROL 	  &none &none       &none
	       	      	     	    	>;
				};
				
		null_layer {
	       		     bindings = <
			     	      	  &none &none &none &none &none &none &none &none &none &none &none &none
  			     	      	  &none &none &none &none &none &none &none &none &none &none &none &none
			     		  &none &none &none &none &none &none &none &none &none &none &none &none
			     		  &none       &none &none       &mo CONTROL 	  &none &none       &none
	       	      	     	    	>;
				};
		
		};
};

